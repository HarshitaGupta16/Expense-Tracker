{"ast":null,"code":"var _jsxFileName = \"E:\\\\JavaScript\\\\GitHub\\\\Expense-Tracker\\\\src\\\\App.js\";\nimport React from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const expenses = [{\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14) // add year then month then numbr of days in that month\n\n  }, {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js\");\n    console.log(expense);\n  }; // This is an alternative to the JSX code and that's why we had to import React \n  // because this is the internal code which automatically creted when you use JSX\n  // in React.createElement we pass first the element then propertires or attributes\n  // and then the content inside that opening and closing of that element.\n  // return React.createElement(\n  //   'div', \n  //   {}, \n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, {items: expenses})\n  //   );\n  // From above JSX alternative we can understand why we have to \n  // return a wrapping element as a root JSX element. You can return array\n  //  of elements but we want here to return 2 separate side by side elements\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/JavaScript/GitHub/Expense-Tracker/src/App.js"],"names":["React","Expenses","NewExpense","App","expenses","id","title","amount","date","Date","addExpenseHandler","expense","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,cAFT;AAGEC,IAAAA,MAAM,EAAE,KAHV;AAIEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAJR,CAKE;;AALF,GADe,EAQf;AAAEJ,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE,QAAnB;AAA6BC,IAAAA,MAAM,EAAE,MAArC;AAA6CC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAAnD,GARe,EASf;AACEJ,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,MAAM,EAAE,MAHV;AAIEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,GATe,EAef;AACEJ,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,mBAFT;AAGEC,IAAAA,MAAM,EAAE,GAHV;AAIEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,GAfe,CAAjB;;AAuBA,QAAMC,iBAAiB,GAAGC,OAAO,IAAI;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,GAHD,CAxBa,CA6Bf;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AAGF;AACA;AACA;;;AACE,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAnDQR,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from './components/NewExpense/NewExpense';\r\n\r\nfunction App() {\r\n  const expenses = [\r\n    {\r\n      id: 'e1',\r\n      title: 'Toilet Paper',\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n      // add year then month then numbr of days in that month\r\n    },\r\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\r\n    {\r\n      id: 'e3',\r\n      title: 'Car Insurance',\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: 'e4',\r\n      title: 'New Desk (Wooden)',\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    },\r\n  ];\r\n\r\n  const addExpenseHandler = expense => {\r\n    console.log(\"In App.js\")\r\n    console.log(expense)\r\n  };\r\n\r\n// This is an alternative to the JSX code and that's why we had to import React \r\n// because this is the internal code which automatically creted when you use JSX\r\n// in React.createElement we pass first the element then propertires or attributes\r\n// and then the content inside that opening and closing of that element.\r\n\r\n  // return React.createElement(\r\n  //   'div', \r\n  //   {}, \r\n  //   React.createElement('h2', {}, \"Let's get started!\"),\r\n  //   React.createElement(Expenses, {items: expenses})\r\n  //   );\r\n\r\n\r\n// From above JSX alternative we can understand why we have to \r\n// return a wrapping element as a root JSX element. You can return array\r\n//  of elements but we want here to return 2 separate side by side elements\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler}/>\r\n      <Expenses items = {expense} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}